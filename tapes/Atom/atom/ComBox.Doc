ComBox                                                              Bram Poot
=============================================================================

The ComBox is an EPROM with commands only. That means that they are not
useable in programs. These commands have been developed to be used as a
tool when writing programs.
The ComBox is located at #Axxx en consists of the following parts:
 #A000 - #A3FF  interpreter and routines
 #A400 - #A7FF  monitor by R.Heuvel, located at #9800 - #9BFF
 #A800 - #A807  overhead for this monitor
 #A808 - #A8FF  CHA-routine
 #A900 - #AF9B  Program PLIST, a program to send BASIC programs to a printer
 #AF9C - #AFFF  LCOM routine

And these are the commands:
 COMBOX  shows all the commands and their entrypoints.
 CHA     Change String. The syntaxis is:
           CHA <delim><oldstring><delim><newstring><delim>
         Wrong syntaxis results in errorcode 53.
 DMP     is identical to HEX of P-CHARME, but it's 16 bytes wide for VDU80.
 HVAR    shows the values of BASIC variables A-Z in hexadecimal format.
 LAB     shows all the used BASIC labels. They are written in alphabetic
         order, with the line number where they are first encountered. If
         a label occurs more than once, the line number is followed by a
         hash (#). Then the alphabeth is displayed with the non-used labels
         in capitals.
 LCOM    offers the possibility to enter more than 64 characters in one time.
         Be careful when processing INPUT an strings.
 LINE    reads a line number (decimal digits only) en shows its address. If
         the line number does not exist, error 127 is generated.
 MON     copies the area from #A400 - #A8FF (monitor by R.Heuvel) to #9800 -
         #9CFF and LINKs to the start address (#9C00).
 BAS     shows all the BASIC programs in the memory range #1000 - #9FFF.
         A BASIC program is recognised, when a CR (#0D) is the first
         characters of a page, followed by an ASCII string without CTRL-codes
         from the 4th position onwards. If the string is missing, the CR is
         made known. The value of the Text Space Pointer is shown as well.
         Finally, two hexadecimal numbers can be entered to change the Text
         Space Pointer. If one or both of these numbers is not hexadecimal,
         the Text Space Pointer is not altered.
 PLIST   copies the area #9F00 - #AFFF (Program PLIST) to #9800-#9EFF and
         RUNs it.
 TS      first removes all spaces at the end of a line and shows:
         -current value text space,
         -value of TOP,
         -length of program,
         -last line number,
         -number of lines,
         -number of characters in longest line.
